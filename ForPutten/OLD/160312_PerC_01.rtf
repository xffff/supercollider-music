{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red255\green102\blue0;\red0\green115\blue0;\red0\green0\blue255;\red51\green51\blue191;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 /************************************	*/\cf3 \
\cf2 /* Percussion Piece	             	*/\cf3 \
\cf2 /*								*/\cf3 \
\cf2 /************************************	*/\cf3 \
\cf2 // SF IN  0-1 (FROM KONTAKT)\cf3 \
\cf2 // SF OUT 2-15 // 0-1 DRY (FROM KONTAKT) // 2-3 DRY ()\cf3 \
\cf2 // \cf3 \
\
\cf4 Help\cf3 .gui;\
\
(\
\pard\pardeftab560\ql\qnatural
\cf3 o = \cf4 Server\cf3 .local.options;\
o.inDevice = \cf5 "Soundflower (16ch)"\cf3 ;\
o.outDevice = \cf5 "Soundflower (16ch)"\cf3 ;\
s.boot;\
\cf4 MIDIClient\cf3 .init;\
\cf6 ~mOut\cf3  = \cf4 MIDIOut\cf3 (0);\
\cf4 TempoClock\cf3 .default.tempo = 0.8;\
\cf6 ~samplerate\cf3  = 96000;\
)\
\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
(\
\cf4 SynthDef\cf3 (\cf7 \\dryaudio\cf3 , \{ \cf8 | amp = 1, out = 0, dur = inf, free_trig = 0 |\cf3 \
	\cf8 var\cf3  sound, env;\
	env = \cf4 FreeSelf\cf3 .kr(free_trig);\
	sound = \cf4 SoundIn\cf3 .ar(0); \cf2 // mono in\cf3 \
	\cf4 Out\cf3 .ar(out, sound);\
\}).add;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf4 SynthDef\cf3 (\cf7 \\quadc_perc\cf3 , \{ \cf8 | out = 0, freq = 48000, amp = 0.1, dec = 0.5 |\cf3 \
	\cf8 var\cf3  r,s;\
\'a0 \'a0 \'a0r = \cf4 LFNoise2\cf3 .ar(16).range(3.5441, 4); \'a0 \'a0 \'a0 \
\'a0 \'a0 \'a0s = \cf4 QuadC\cf3 .ar(freq, r.neg, r, 0, 0.1) * \
		\cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(0.01,dec,amp),doneAction:2); \
	\cf4 Out\cf3 .ar(out,s);\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf7 \\distortion\cf3 , \{ \cf8 | in = 0, out = 0, amount = 0, amp = 0  |\cf3 \
	\cf8 var\cf3  sound, k;\
	sound = \cf4 In\cf3 .ar(in, 1);\
	k = 2 * amount / (1-amount);\
	sound = (1+k) * sound / (1+(k*sound.abs));\
	sound = sound * amp;\
	\cf4 Out\cf3 .ar(out,sound);\
\}).add;\
\pard\pardeftab560\ql\qnatural
\cf3 )\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
\
(\
(\
\cf2 // free these in case they are still there\cf3 \
\cf6 ~input\cf3 .free; \cf6 ~fx\cf3 .free; \cf6 ~output\cf3 .free;\
\cf6 ~master_fx_bus\cf3 .free;\
\
\cf6 ~input\cf3  = \cf4 Group\cf3 .new(s,\cf7 \\addToHead\cf3 );   \cf2 // from sampler\cf3 \
\cf6 ~fx\cf3  = \cf4 Group\cf3 .new(s, \cf7 \\addToTail\cf3 );     \cf2 // fx chain\cf3 \
\cf6 ~output\cf3  = \cf4 Group\cf3 .new(s, \cf7 \\addToTail\cf3 ); \cf2 // output\cf3 \
\
\cf6 ~master_fx_bus\cf3   = \cf4 Bus\cf3 .audio(s,2);\
\
\cf2 // post the groups\cf3 \
s.queryAllNodes;\
);\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
\
\cf2 // cleanup in case I quit early\cf3 \
(\
\cf6 ~dryaudio\cf3 .free; \
\cf6 ~buf_1\cf3 .free;\
\cf6 ~buf_2\cf3 .free;\
);\
\cf2 // alloc buffers\cf3 \
\cf6 ~buf_1\cf3  = \cf4 Buffer\cf3 .alloc(s, \cf6 ~samplerate\cf3  * 71, 2); \cf2 // 2 channel 71 second buffer (this will be the longest it can be)\cf3 \
\cf6 ~buf_2\cf3  = \cf4 Buffer\cf3 .alloc(s, \cf6 ~samplerate\cf3  * 71, 2); \cf2 // 2 channel 71 second buffer (this will be the longest it can be)\cf3 \
\
\cf2 // persistent synthdefs\cf3 \
(\
\cf2 // dry audio straight to output\cf3 \
\cf6 ~dryaudio\cf3  = \cf4 Synth\cf3 (\cf7 \\dryaudio\cf3 , [\cf7 \\amp\cf3 , 0.85, \cf7 \\out\cf3 , 1], target: \cf6 ~input\cf3 , addAction: \cf7 \\addToHead\cf3 );\
\cf2 // for fx\cf3 \
\cf6 ~dryaudio\cf3  = \cf4 Synth\cf3 (\cf7 \\dryaudio\cf3 , [\cf7 \\amp\cf3 , 0.85, \cf7 \\out\cf3 , \cf6 ~master_fx_bus\cf3 ], target: \cf6 ~input\cf3 , addAction: \cf7 \\addToHead\cf3 );  \
);\
\
s.queryAllNodes;\
(\
\cf2 // section lengths\cf3 \
\cf6 ~section1_dur\cf3  = \cf9 inf\cf3 ;\
\
postln(\cf5 "Section Lengths"\cf3 );\
post(\cf5 "1: "\cf3 ); \cf6 ~section1_dur\cf3 .postln; \
);\
\
postln(\cf5 "Start"\cf3 );\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
(\
\cf6 ~section1_drum1\cf3  = \cf4 Pfindur\cf3 (\cf6 ~section1_dur\cf3 ,\
	\cf4 Pbind\cf3 (\
		\cf7 \\type\cf3 , \cf7 \\midi\cf3 ,\cf7 \\midicmd\cf3 , \cf7 \\noteOn\cf3 , \cf7 \\midiout\cf3 , \cf6 ~mOut\cf3 ,	\
		\cf7 \\chan\cf3 , 0,\
		\cf7 \\midinote\cf3 , 43,\
		\cf7 \\dur\cf3 , \cf4 Pxrand\cf3 ([\cf4 Pn\cf3 (1/3,3),\cf4 Pn\cf3 (1/4,4),\cf4 Pn\cf3 (1/8,4)],\cf9 inf\cf3 ), \
		\cf7 \\amp\cf3 , 0.25\
	)\
);\
);\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
)\
\
\
(\
\cf6 ~master\cf3  = \cf4 Pseq\cf3 ([\
		\cf6 ~section1_drum1\cf3 \
	], 1).play;\
)\
\
\cf6 ~master\cf3 .stop;\
}