{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red255\green102\blue0;\red0\green115\blue0;\red0\green0\blue255;\red51\green51\blue191;
\red0\green0\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 /************************************	*/\cf3 \
\cf2 /* Percussion Piece	             	*/\cf3 \
\cf2 /*								*/\cf3 \
\cf2 /************************************	*/\cf3 \
\cf2 // SF IN  0-1 (FROM KONTAKT)\cf3 \
\cf2 // SF OUT 2-15 // 0-1 DRY (FROM KONTAKT) // 2-3 DRY ()\cf3 \
\cf2 // \cf3 \
\
\cf4 Help\cf3 .gui;\
\
(\
\pard\pardeftab560\ql\qnatural
\cf3 o = \cf4 Server\cf3 .local.options;\
o.inDevice = \cf5 "Soundflower (16ch)"\cf3 ;\
o.outDevice = \cf5 "Soundflower (16ch)"\cf3 ;\
s.waitForBoot;\
\cf4 MIDIClient\cf3 .init;\
\cf6 ~mOut\cf3  = \cf4 MIDIOut\cf3 (0);\
\cf4 TempoClock\cf3 .default.tempo = 0.8;\
\cf6 ~samplerate\cf3  = 48000;\
)\
\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
(s.waitForBoot(\
\cf4 SynthDef\cf3 (\cf7 \\dryaudio\cf3 , \{ \cf8 | amp = 1, dryout = 0, fxout = 1, dur = inf, free_trig = 0 |\cf3 \
	\cf8 var\cf3  sound, env;\
	env = \cf4 FreeSelf\cf3 .kr(free_trig);\
	sound = \cf4 SoundIn\cf3 .ar(0); \cf2 // in from kontakt (SF 0)\cf3 \
	\cf4 Out\cf3 .ar(dryout, sound);\cf4 Out\cf3 .ar(fxout, sound);\
\}).add;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf4 SynthDef\cf3 (\cf7 \\quadc\cf3 , \{ \cf8 | out = 0, freq = 48000, amp = 0.1, atk = 0.01, dec = 0.5 |\cf3 \
	\cf8 var\cf3  r,s;\
	r = \cf4 LFNoise2\cf3 .ar(16).range(3.5441, 4); \'a0 \'a0 \'a0 \
	s = \cf4 QuadC\cf3 .ar(freq, r.neg, r, 0, 0.1) * \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(atk,dec),doneAction:2);\
	s = s * amp;\
	s = \cf4 Limiter\cf3 .ar(s,1.0,0.01);\
\cf4 Out\cf3 .ar(out,s);\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf7 \\sin_exprand16\cf3 , \{ \cf8 | out = 0, bfreq = 500, tfreq = 1000, amp = 0.1, atk = 0.01, dec = 0.5 |\cf3 \
	\cf8 var\cf3  sound;\
	sound = \cf4 Mix\cf3 .fill(16, \{\cf4 SinOsc\cf3 .ar(\cf4 ExpRand\cf3 (bfreq,tfreq), 0, 1/16)\}); \
	sound = sound * \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(atk,dec,amp),doneAction:2); \
	\cf4 Out\cf3 .ar(out,sound);\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf7 \\saw_perc\cf3 , \{ \cf8 | out = 0, freq = 60, amp = 0, filterFreq = 80, res = 0.2, dur = 0.5 |\cf3 \
	\cf8 var\cf3  sound;\
	sound = \cf4 Saw\cf3 .ar([freq*0.99,freq, freq*1.01], 1/3).sum;\
	sound = sound * \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(0.01,dur,amp),doneAction:2);\
	sound = \cf4 RLPF\cf3 .ar(sound, filterFreq.max(freq+1), res);\
	\cf4 Out\cf3 .ar(out,sound);\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf7 \\distortion\cf3 , \{ \cf8 | in = 0, out = 0, amount = 0, amp = 0, atk = 10, \
						sus = 10, dec = 10, dur = 10 |\cf3 \
	\cf8 var\cf3  sound, k, env;\
	\cf2 //env = EnvGen.ar(Env.new([1e-10,amp,amp,1e-10],[atk,sus,dec],'exp'),doneAction:2);\cf3 \
	env = \cf4 Line\cf3 .kr(1,0,dur,doneAction:2);\
	sound = \cf4 In\cf3 .ar(in, 1);\
	k = 2 * amount / (1-amount);\
	sound = (1+k) * sound / (1+(k*sound.abs));\
	\cf2 //sound = sound * env;\cf3 \
	\cf4 ReplaceOut\cf3 .ar(out,sound);\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf7 \\bpf\cf3 , \{ \cf8 | in = 0, out = 0, freq = 100, res = 0.7, dur = 10 |\cf3  \
	\cf8 var\cf3  sound, env;\
	sound = \cf4 In\cf3 .ar(in,1);\
	env = \cf4 Line\cf3 .kr(1,0,dur,doneAction:2);\
	sound = \cf4 BPF\cf3 .ar(sound,freq,res);\
	\cf4 ReplaceOut\cf3 .ar(out,sound);\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf7 \\mod_delay\cf3 , \{ \cf8 | in = 0, out = 0, freq = 0.25, amp = 0, mul = 0, \
						add = 0, maxdelay = 5, dur = 10 |\cf3 \
	\cf8 var\cf3  sound, env;\
	sound = \cf4 In\cf3 .ar(in, 1);\
	env = \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .linen(0.01,dur,0.01,amp), doneAction:2);\
	sound = \cf4 DelayC\cf3 .ar(sound, maxdelay, \cf4 LFTri\cf3 .ar(freq, 0, mul, add).abs, env); \cf2 // +=\cf3 \
	\cf4 ReplaceOut\cf3 .ar(out, sound);\
\}).add;\
\pard\pardeftab560\ql\qnatural
\cf3 ))\
\cf2 ////////////////////////////////////////////////////\cf3 \
\
(\
(\
\cf2 // free these in case they are still there\cf3 \
\cf6 ~input\cf3 .free; \cf6 ~fx\cf3 .free; \cf6 ~output\cf3 .free;\
\cf6 ~master_fx_bus\cf3 .free;\
\
\cf6 ~input\cf3  = \cf4 Group\cf3 .new(s,\cf7 \\addToHead\cf3 );   \cf2 // from sampler\cf3 \
\cf6 ~fx\cf3  = \cf4 Group\cf3 .new(s, \cf7 \\addToTail\cf3 );     \cf2 // fx chain\cf3 \
\cf6 ~output\cf3  = \cf4 Group\cf3 .new(s, \cf7 \\addToTail\cf3 ); \cf2 // output\cf3 \
\
\cf6 ~master_fx_bus\cf3   = \cf4 Bus\cf3 .audio(s,1); \cf2 // fx bus\cf3 \
\
\cf2 // post the groups\cf3 \
s.queryAllNodes;\
);\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
\
\cf2 // cleanup in case I quit early\cf3 \
(\
\cf6 ~dryaudio\cf3 .free; \
\cf2 // ~buf_1.free;\cf3 \
\cf2 // ~buf_2.free;\cf3 \
);\
\cf2 // alloc buffers\cf3 \
\cf2 // ~buf_1 = Buffer.alloc(s, ~samplerate * 71, 2); // 2 channel 71 second buffer (this will be the longest it can be)\cf3 \
\cf2 // ~buf_2 = Buffer.alloc(s, ~samplerate * 71, 2); // 2 channel 71 second buffer (this will be the longest it can be)\cf3 \
\
\cf2 // persistent synthdefs\cf3 \
(\
\cf2 // dry audio straight to output (start at 2 - Kontakt taking up 0-1)\cf3 \
\cf6 ~dryaudio\cf3  = \cf4 Synth\cf3 (\cf7 \\dryaudio\cf3 , [\cf7 \\amp\cf3 , 1.0, \cf7 \\dryout\cf3 , 1, \cf7 \\fxout\cf3 , \cf6 ~master_fx_bus\cf3 ], target: \cf6 ~input\cf3 , addAction: \cf7 \\addToHead\cf3 );\
);\
\
s.queryAllNodes;\
(\
\cf2 // section lengths\cf3 \
\cf6 ~section1_dur\cf3  = 30;\
\cf6 ~section2_dur\cf3  = 30;\
\
postln(\cf5 "Section Lengths"\cf3 );\
post(\cf5 "1: "\cf3 ); \cf6 ~section1_dur\cf3 .postln;\
post(\cf5 "2: "\cf3 ); \cf6 ~section2_dur\cf3 .postln; \
);\
\
\cf2 ////////////////////////////////////////////////////\cf3 \
(\
\
(\
\cf6 ~section1_drum1\cf3  = \cf4 Pfindur\cf3 (\cf6 ~section1_dur\cf3 ,\
	\cf4 Pbind\cf3 (\
		\cf7 \\type\cf3 , \cf7 \\midi\cf3 ,\cf7 \\midicmd\cf3 , \cf7 \\noteOn\cf3 , \cf7 \\midiout\cf3 , \cf6 ~mOut\cf3 ,	\
		\cf7 \\chan\cf3 , 0,\
		\cf7 \\midinote\cf3 , \cf4 Pseq\cf3 ([\cf4 Pn\cf3 (58,12),\cf4 Pwrand\cf3 ([36,\cf4 Prand\cf3 ((45..48),1),\cf4 Pn\cf3 (58,3)],[0.6,0.2,0.2],\cf9 inf\cf3 )],1),\
		\cf7 \\dur\cf3 , \cf4 Pif\cf3 (\cf4 Pbinop\cf3 (\cf7 '=='\cf3 , \cf4 Pkey\cf3 (\cf7 \\midinote\cf3 ), 58), 1/12, 1/4), \
		\cf7 \\amp\cf3 , \cf4 Pseq\cf3 ([\cf4 Pexprand\cf3 (0.25,1.0,1,12),\cf4 Pwrand\cf3 ([0,\cf4 Pexprand\cf3 (0.25,1.0,1)],[0.2,0.8],\cf9 inf\cf3 )],1)\
	)\
);\
);\
\
(\
\cf6 ~section1_fx1\cf3  = \cf4 Pfindur\cf3 (\cf6 ~section1_dur\cf3 ,\
	\cf4 Pbind\cf3 (\
		\cf7 \\instrument\cf3 , \cf7 \\mod_delay\cf3 ,\
		\cf7 \\group\cf3 , \cf6 ~fx\cf3 ,	\
		\cf7 \\in\cf3 , \cf6 ~master_fx_bus\cf3 ,\
		\cf7 \\out\cf3 , 2,\
		\cf7 \\dur\cf3 , \cf4 Pseq\cf3 ([1,\cf4 Prand\cf3 ((2..8),\cf9 inf\cf3 )],1),\
		\cf7 \\maxdelay\cf3 , 2.5,\
		\cf7 \\mul\cf3 , \cf4 Prand\cf3 ((5..15),\cf9 inf\cf3 )*0.1,\
		\cf7 \\add\cf3 , 1.5,\
		\cf7 \\freq\cf3 , \cf4 Prand\cf3 ([1/3,1/2,1/4],\cf9 inf\cf3 ),\
		\cf7 \\amp\cf3 , \cf4 Pseq\cf3 ([0,\cf4 Pwrand\cf3 ([0,1.0],[0.3,0.7],\cf9 inf\cf3 )],1)\
	)\
);\
);\
\
);\
\cf2 ////////////////////////////////////////////////////\cf3 \
(\
\
(\
\cf6 ~section2_drum1\cf3  = \cf4 Pfindur\cf3 (\cf6 ~section2_dur\cf3 ,\
	\cf4 Pbind\cf3 (\
		\cf7 \\type\cf3 , \cf7 \\midi\cf3 ,\cf7 \\midicmd\cf3 , \cf7 \\noteOn\cf3 , \cf7 \\midiout\cf3 , \cf6 ~mOut\cf3 ,	\
		\cf7 \\chan\cf3 , 0,\
		\cf7 \\midinote\cf3 , \cf4 Pseq\cf3 ([\cf4 Pn\cf3 (58,14),\cf4 Prand\cf3 ((45..48),\cf9 inf\cf3 )],1),\
		\cf7 \\dur\cf3 , \cf4 Pseq\cf3 ([\cf4 Pn\cf3 (1/2,4),\cf4 Pn\cf3 (1/12,12),\cf4 Prand\cf3 ([1/4,1/8],\cf9 inf\cf3 )],1), \
		\cf7 \\amp\cf3 , \cf4 Pseq\cf3 ([\cf4 Pexprand\cf3 (0.25,1.0,16),\cf4 Pwrand\cf3 ([0,\cf4 Pexprand\cf3 (0.25,1.0,1)],[0.2,0.8],\cf9 inf\cf3 )],1)\
	)\
);\
);\
\
(\
\cf6 ~section2_drum2\cf3  = \cf4 Pfindur\cf3 (\cf6 ~section2_dur\cf3 ,\
	\cf4 Pbind\cf3 (\
		\cf7 \\type\cf3 , \cf7 \\midi\cf3 ,\cf7 \\midicmd\cf3 , \cf7 \\noteOn\cf3 , \cf7 \\midiout\cf3 , \cf6 ~mOut\cf3 ,	\
		\cf7 \\chan\cf3 , 0,\
		\cf7 \\midinote\cf3 , 70,\
		\cf7 \\dur\cf3 , 1/16, \
		\cf7 \\amp\cf3 , \cf4 Pseq\cf3 ([\cf4 Pn\cf3 (0,46),\cf4 Pwrand\cf3 ([0,\cf4 Pexprand\cf3 (0.1,0.3,1)],[0.7,0.3],\cf9 inf\cf3 )],1)\
	)\
);\
);\
\
(\
\cf6 ~section2_synth1\cf3  = \cf4 Pfindur\cf3 (\cf6 ~section2_dur\cf3 ,\
	\cf4 Pbind\cf3 (\
		\cf7 \\instrument\cf3 , \cf7 \\saw_perc\cf3 ,	\
		\cf7 \\out\cf3 , 3,\
		\cf7 \\freq\cf3 , 30.midicps,\
		\cf7 \\filterFreq\cf3 , 50.midicps,\
		\cf7 \\res\cf3 , 0.5,\
		\cf7 \\dur\cf3 , \cf10 Pseq\cf0 ([\cf10 2\cf0 ,\cf3 1/4],1), \
		\cf7 \\amp\cf3 , \cf10 Pseq\cf0 ([\cf10 0\cf0 ,1.0],1)\cf3 \
	)\
);\
);\
\
\
);\
\
)\
\
\
(\
\cf6 ~master\cf3  = \cf4 Pseq\cf3 ([\
		\cf4 Ppar\cf3 ([\cf6 ~section1_drum1\cf3 , \cf6 ~section1_fx1\cf3 ],1),\
		\cf4 Ppar\cf3 ([\cf6 ~section2_drum1\cf3 , \cf6 ~section2_drum2\cf3 , \cf6 ~section2_synth1\cf3 ],1),\
		], 1).play;\
)\
\
\cf6 ~master\cf3 .stop;\
s.queryAllNodes;\
}