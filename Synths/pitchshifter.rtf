{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue255;\red0\green0\blue191;
\red191\green0\blue0;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 s.boot;\
\
\{\cf3 | window = 80, delay = 0.5|\cf2 \
	\cf3 var\cf2  transp = \cf4 MouseX\cf2 .kr(-12,12);\
	\cf3 var\cf2  sound = \cf4 SinOsc\cf2 .ar(220);\
	\
	\cf5 // this is the frequency of the phasors\cf2 \
	\cf3 var\cf2  freq = transp.midiratio; \cf5 // (transp.midiratio - 1 * 1.neg) / (window.max(1) * 0.001);\cf2 \
	\
	\cf5 // envelopes for shit\cf2 \
	\cf3 var\cf2  denv = \cf4 Line\cf2 .ar(delay.max(1.5),0.2);\
	\cf3 var\cf2  wenv = \cf4 Line\cf2 .ar(window.max(1),0.2);\
	\
	\cf5 // these read through delay lines (phasors = delaytimes)\cf2 \
	\cf3 var\cf2  phasors = [\
		\cf4 LFSaw\cf2 .ar(freq,0,transp),\
		\cf4 LFSaw\cf2 .ar(freq,1)\
	];\
	\
	\cf5 // these delay lines are read through out of phase\cf2 \
	\cf3 var\cf2  delays = [\
		\cf4 DelayL\cf2 .ar(sound,delay,phasors[0]*wenv+denv),\
		\cf4 DelayL\cf2 .ar(sound,delay,phasors[1]*wenv+denv)\
	];\
	\
	\cf5 // output\cf2 \
	sound = (phasors[0]-0.5*0.5).cos*delays[0]+\
		(phasors[1]-0.5*0.5).cos*delays[1];\
\
\}.play;\
\
\
\cf5 // f = (t-1)R/s\cf2 \
\{\
	\cf3 var\cf2  env, transp, sound, phasors, delays;\
	\
	sound = \cf4 SinOsc\cf2 .ar(442);\
	env = \cf4 Env\cf2 .new([0.001, 1, 0.001],[1, 1],\cf6 'welch'\cf2 );\
	phasors = [\
		\cf4 LFSaw\cf2 .ar(freq),\
		\cf4 LFSaw\cf2 .ar(freq,1) \cf5 // this one has to be out of phase\cf2 \
	];\
	\
	\}.play;\
	\
\{\cf4 LFSaw\cf2 .ar(10,[0,2])\}.plot;\
\
\
\{\
	\cf3 var\cf2  k = \cf4 SinOsc\cf2 .kr(0.1,0,0.5,1);\
	\cf3 var\cf2  sound = \cf4 SinOscFB\cf2 .ar(442,k);\
	\cf4 PitchShift\cf2 .ar( \
		sound,  \
		[0.05,0.03], \
		k*0.5, \
		0, \
		0\
	)\
\}.play;}