{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue255;\red0\green115\blue0;
\red96\green96\blue96;\red51\green51\blue191;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 Server\cf0 .default = s = \cf2 Server\cf0 .internal.boot;\
s.scope;\
\
(\
\cf3 var\cf0  scale = \cf2 Scale\cf0 .minor.degrees + 26;\
\
\cf2 Pdef\cf0 (\cf4 \\bass\cf0 ,\{\
	\cf2 Pbind\cf0 (\
		\cf4 \\instrument\cf0 , \cf5 "cs80lead_mh"\cf0 ,\
		\cf4 \\freq\cf0 , (scale + (12 * \cf2 Prand\cf0 ((2..4),\cf6 inf\cf0 ))).midicps,\
		\cf4 \\dur\cf0 , 10,\
		\cf4 \\att\cf0 , \cf2 Pkey\cf0 (\cf4 \\dur\cf0 ) / \cf2 Prand\cf0 ((1..4), \cf6 inf\cf0 ),\
		\cf4 \\rel\cf0 , \cf2 Pkey\cf0 (\cf4 \\dur\cf0 ) / \cf2 Prand\cf0 ((1..4), \cf6 inf\cf0 ),\
		\cf4 \\fatt\cf0 , \cf2 Pkey\cf0 (\cf4 \\dur\cf0 ) / \cf2 Prand\cf0 ((1..4), \cf6 inf\cf0 ),\
		\cf4 \\cutoff\cf0 , \cf2 Pkey\cf0 (\cf4 \\freq\cf0 ) * \cf2 Prand\cf0 ((1..4), \cf6 inf\cf0 ),\
		\cf4 \\amp\cf0 , 1.0 \cf7 // Prand((0.1,0.2..1.0), inf)\cf0 \
	)\
\}).quant_(1).play;\
\
)\
\
(\
\cf3 var\cf0  scale, numvoices;\
scale = \cf2 Scale\cf0 .minor.degrees.choose;\
numvoices = 8;\
numvoices.do\{\
	fork\{		\
		loop\{\
			\cf3 var\cf0  t = 8, fund = 26+[0,5,7,9,12].choose;\
			\cf3 var\cf0  a,d,s,r,fa,fd,fs,fr,ratio,dtune,freq,\
				ffreq,vibrate,vibdepth,cutoff,amp;\
	 		freq = (scale+fund+(12*(0..3).choose)).midicps;\
	 		vibrate = t/(1..10).choose;\
	 		vibdepth = (10..100).choose.reciprocal;\
			dtune = \cf2 LFNoise0\cf0 .kr(1/t,0.02,1);\
			cutoff = freq * (1.1,1.2..4).choose;\
	 		ratio = (0.99,0.991..1.01).choose;	\
	 		amp = 1;\
			\
	 		a = t/3.0.rand;		\
	 		s = t/3.0.rand;\
	 		r = t/3.0.rand;\
	 		fa = t/3.0.rand;\
	 		fs = t/3.0.rand;\
	 		fr = t/3.0.rand;\
			\
			play\{\
				\cf3 var\cf0  env, fenv, sig, gate, vib;\
				gate = \cf2 Line\cf0 .kr(1,0,t);\
				env = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .linen(a,s,r),doneAction:2);\
				fenv = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .linen(fa,fs,fr),doneAction:2);\
				vib = \cf2 SinOsc\cf0 .kr(vibrate).range(vibdepth.neg,vibdepth)+1;\
				freq = vib*freq;\
				freq = \cf2 Line\cf0 .kr(freq,freq*ratio,t);\
				sig = \cf2 Select\cf0 .ar(2.rand,[\
					\cf2 Pulse\cf0 .ar([freq,freq*(1+dtune),freq*(1-dtune)],0.5,env*amp).sum.tanh,\
					\cf2 Saw\cf0 .ar([freq,freq*(1+dtune),freq*(1-dtune)],env*amp).sum.tanh\
					]);\
				ffreq = max(fenv*freq*12,cutoff)+100;\
				sig = \cf2 MoogFF\cf0 .ar(sig,ffreq,(0.1,0.2..3.0).choose).tanh;\
				sig = \cf2 RLPF\cf0 .ar(sig,10000,0.9);\
				sig = sig/numvoices;\
				\cf2 Pan2\cf0 .ar(sig,\cf2 LFNoise2\cf0 .kr(t.rand));\
				\};\
			t.wait;\
			\};\
		\};\
\};\
\cf7 //\cf0 \
\cf7 //SynthDef(\\pluckstring, \{ | freq, fb, fbamount, plk, amp, dur | \cf0 \
\cf7 //	var sig, d1, d2, exciter, block;\cf0 \
\cf7 //	\cf0 \
\cf7 //	Line.kr(1,0,dur*4,doneAction:2);\cf0 \
\cf7 //	block = (1/ControlRate.ir)/2;\cf0 \
\cf7 //	fb = LocalIn.ar(1);\cf0 \
\cf7 //	exciter = EnvGen.ar(Env([0,amp,0],[freq*plk, freq*(1-plk)],'linear'));\cf0 \
\cf7 //	d1 = DelayC.ar( exciter + fb, freq-block, freq-block );\cf0 \
\cf7 //	d2 = DelayC.ar( exciter + d1.neg, freq-block, freq-block ) * fbamount;\cf0 \
\cf7 //	LocalOut.ar(d2.neg);\cf0 \
\cf7 //	sig = d2;\cf0 \
\cf7 //	sig = PitchShift.ar(sig,0.2,[1.999,2,2.001]).sum;\cf0 \
\cf7 //	Pan2.ar(sig,LFNoise2.kr(dur.rand));\cf0 \
\cf7 //	Out.ar(0, sig)\cf0 \
\cf7 //\}).add;\cf0 \
\cf7 //\cf0 \
\cf7 //var scale = Scale.minor.degrees + 26;\cf0 \
\cf7 //\cf0 \
\cf7 //fork\{\cf0 \
\cf7 //	loop\{\cf0 \
\cf7 //		var t, t2, notes, numnotes, time, fb, fbamount, plk, amp, i, step;\cf0 \
\cf7 //		i = 0;\cf0 \
\cf7 //		t = (1..10).choose;\cf0 \
\cf7 //		numnotes = 64.rand;\cf0 \
\cf7 //		amp = 0.1;\cf0 \
\cf7 //		fbamount = 0.994;\cf0 \
\cf7 //		plk = 0.667;\cf0 \
\cf7 //		time = (6,12..30).choose;			\cf0 \
\cf7 //		notes = Array.fill(numnotes,\{|i| \cf0 \
\cf7 //			i=i*12; i+scale\}).flat.midicps;\cf0 \
\cf7 //		notes = notes * 6;\cf0 \
\cf7 //		t2 = 1/8;\cf0 \
\cf7 //		loop\{ \cf0 \
\cf7 //			var freq;\cf0 \
\cf7 //			i = i + 1;\cf0 \
\cf7 //			step = i % numnotes;\cf0 \
\cf7 //			freq = notes[step];\cf0 \
\cf7 //			freq.postln;\cf0 \
\cf7 //			if(freq>1900,\{amp=0\});\cf0 \
\cf7 //			freq = freq.reciprocal;\cf0 \
\cf7 //			Synth(\\pluckstring, [\\freq, freq, \\dur, t2, \\plk, plk, \cf0 \
\cf7 //				\\amp, amp, \\fb, fb, \\fbamount, fbamount]);\cf0 \
\cf7 //			t2.wait;\cf0 \
\cf7 //			\};\cf0 \
\cf7 //		t.wait;\cf0 \
\cf7 //	\};\cf0 \
\cf7 //\};\cf0 \
\
\{\
	\cf3 var\cf0  in = \cf2 In\cf0 .ar(0,2);\
	in = \cf2 Compander\cf0 .ar(in*0.5,in,0.75,1,0.75,0.1,0.4);\
	in = (in*0.2) + \cf2 GVerb\cf0 .ar(in, 20, 20, mul:0.6);\
	in = \cf2 Limiter\cf0 .ar(\cf2 LeakDC\cf0 .ar(in));		\
	\cf2 ReplaceOut\cf0 .ar(0, in)\
\}.play(addAction:\cf4 \\addToTail\cf0 );\
\
)}